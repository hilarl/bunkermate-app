{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/Dashboard.js","webpack:///./src/pages/home/dashboard.js"],"names":["_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useRowStyles","makeStyles","root","borderBottom","createData","name","calories","fat","carbs","protein","price","history","date","itemName","amount","Row","props","row","useState","open","setOpen","classes","Fragment","className","aria-label","size","onClick","component","scope","align","style","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","variant","gutterBottom","map","historyRow","key","Math","round","rows","Dashboard","theme","flexGrow","background","minHeight","menuButton","marginRight","spacing","title","container","borderRadius","width","maxWidth","padding","paper","boxShadow","appBar","color","navIcon","toolbar","mixins","tableRow","fontSize","useStyles","position","href","edge","table","Paper"],"mappings":"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","file":"component---src-pages-home-dashboard-js-f4da70351b38747b8120.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"\n}), 'Dashboard');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      { date: '19-2-2021', itemName: 'Small fuel bottle', amount: 3, amount: '12' },\n      { date: '19-2-2021', itemName: 'Large fuel bottle', amount: 1 },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Details\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Item Name</TableCell>\n                    <TableCell>Amount</TableCell>\n                    <TableCell>Price (â‚¬)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell>{historyRow.itemName}</TableCell>\n                      <TableCell>{historyRow.amount}</TableCell>\n                      <TableCell>\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        itemName: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst rows = [\n  createData('Breda Yacht Supplies', '19-2-2021', 'Queen', 'Breda', '8.75'),\n  createData('Amsterdam Boat Shop', '19-2-2021', 'Queen', 'Breda', '8.75'),\n  createData('Breda Yacht Supplies', '19-2-2021', 'Queen', 'Breda', '8.75'),\n  createData('Breda Yacht Supplies', '19-2-2021', 'Queen', 'Breda', '8.75'),\n  createData('Breda Yacht Supplies', '19-2-2021', 'Queen', 'Breda', '8.75'),\n];\n\nexport default function Dashboard() {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      background: '#eee',\n      minHeight: '100vh',\n      paddingTop: '90px',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    container: {\n      borderRadius: '10px',\n      width: '100%',\n      maxWidth: '1100px',\n      background: 'white',\n      padding: '30px',\n      margin: 'auto',\n    },\n    paper: {\n      boxShadow: '0 0px 0px 0px rgba(255, 255, 255, .0)!important',\n    },\n    appBar: {\n      color: 'white!important',\n      background: 'black',\n      boxShadow: '0 0px 0px 0px rgba(255, 255, 255, .0)!important',\n    },\n    navIcon: {\n      color: 'white!important',\n    },\n    toolbar: theme.mixins.toolbar,\n    tableRow: {\n      fontSize: '12px!important',\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Bunkermate\n          </Typography>\n          <IconButton href=\"/home\" edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <HomeIcon className={classes.navIcon} />\n          </IconButton>\n          <IconButton href=\"/home/dashboard\" edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <DashboardIcon className={classes.navIcon} />\n          </IconButton>\n          <IconButton href=\"/\" edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <PowerSettingsNewIcon className={classes.navIcon} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.container}>\n        <div className={classes.table}>\n          <TableContainer component={Paper} className={classes.paper}>\n            <Table aria-label=\"collapsible table\" className={classes.tableRow}>\n              <TableHead>\n                <TableRow>\n                  <TableCell />\n                  <TableCell>Supplier</TableCell>\n                  <TableCell align=\"right\">Order Date</TableCell>\n                  <TableCell align=\"right\">Vessel</TableCell>\n                  <TableCell align=\"right\">Location</TableCell>\n                  <TableCell align=\"right\">Amount (â‚¬)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <Row key={row.name} row={row} />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}